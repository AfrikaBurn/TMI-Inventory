<?php

/***********************************************************************************************************************
 * This is an example file for all PartKeepr-related configuration options.
 *
 * PartKeepr sets all relevant Symfony2 configurations via this file. If you require more flexibility for your setup,
 * create an app/config/config_custom.yml file which will be parsed if it exists.
 *
 **********************************************************************************************************************/

/**
 * Specifies the database driver. Available options are listed on this page:
 * http://docs.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#driver
 */
$container->setParameter('database_driver', 'pdo_mysql');

/**
 * Specifies the hostname for the database
 */
$container->setParameter('database_host', 'localhost');
/**
 * Specifies the database port.
 */
$container->setParameter('database_port', '3306');

/**
 * Specifies the database name
 */
$container->setParameter('database_name', 'symfony');

/**
 * Specifies the username for the database
 */
$container->setParameter('database_user', 'root');

/**
 * Specifies the password for the database
 */
$container->setParameter('database_password', null);

/**
 * Specifies the PartKeepr data directory
 */
$container->setParameter('partkeepr.filesystem.data_directory', '%kernel.root_dir%/../data/');

/**
 * Specifies if PartKeepr should check for non-running cronjobs
 */
$container->setParameter('partkeepr.cronjob.check', true);

$container->setParameter('mailer_transport', null);
$container->setParameter('mailer_host', null);
$container->setParameter('mailer_port', null);
$container->setParameter('mailer_encryption', null);
$container->setParameter('mailer_user', null);
$container->setParameter('mailer_password', null);
$container->setParameter('mailer_auth_mode', null);

$container->setParameter('authentication_provider', 'PartKeepr.Auth.WSSEAuthenticationProvider');

$container->setParameter('locale', 'en');

$container->setParameter('secret', 'COAAFJGGLPHPDGGNCNILHFGECFMMACKC');

$container->setParameter('fr3d_ldap.driver.host', '127.0.0.1');
$container->setParameter('fr3d_ldap.driver.port', null);
$container->setParameter('fr3d_ldap.driver.username', null);
$container->setParameter('fr3d_ldap.driver.password', null);
$container->setParameter('fr3d_ldap.driver.bindRequiresDn', false);
$container->setParameter('fr3d_ldap.driver.baseDn', '');
$container->setParameter('fr3d_ldap.driver.accountFilterFormat', null);
$container->setParameter('fr3d_ldap.driver.optReferrals', null);
$container->setParameter('fr3d_ldap.driver.useSsl', null);
$container->setParameter('fr3d_ldap.driver.useStartTls', null);
$container->setParameter('fr3d_ldap.driver.accountCanonicalForm', null);
$container->setParameter('fr3d_ldap.driver.accountDomainName', null);
$container->setParameter('fr3d_ldap.driver.accountDomainNameShort', null);
$container->setParameter('fr3d_ldap.user.enabled', false);
$container->setParameter('fr3d_ldap.user.baseDn', 'dc=blabla,dc=com');
$container->setParameter('fr3d_ldap.user.filter', null);
$container->setParameter('fr3d_ldap.user.attribute.username', "samaccountname");
$container->setParameter('fr3d_ldap.user.attribute.email', "email");

/**
 * Specifies if the frontend should perform an auto-login
 */
$container->setParameter('partkeepr.frontend.auto_login.enabled', false);

/**
 * Specifies the auto-login username
 */
$container->setParameter('partkeepr.frontend.auto_login.username', 'admin');

/**
 * Specifies the auto-login password
 */
$container->setParameter('partkeepr.frontend.auto_login.password', 'admin');

/**
 * Specifies the category path separator
 */
$container->setParameter('partkeepr.category.path_separator', ' ➤ ');

/**
 * Specifies a message of the day. Set to any string instead of false
 * to display a MOTD. Example
 * $container->setParameter('partkeepr.frontend.motd', "This is a MOTD");
 */
$container->setParameter('partkeepr.frontend.motd', false);

/**
 * Specifies if a quota should be used.
 * If set to false, no quota is used. Set it to a numeric value to set a quota in bytes.
 */
$container->setParameter('partkeepr.filesystem.quota', false);

/**
 * Specifies the dunglas cache. Defaults to false.
 * You can use the APCu cache by specifying "api.mapping.cache.apc" here.
 *
 * Further reading: https://api-platform.com/doc/1.0/api-bundle/performances
 */
$container->setParameter('cache.dunglas', false);

/**
 * Specifies the doctrine cache. Defaults to "array", but can be "apc".
 *
 * Further reading: http://symfony.com/doc/current/bundles/DoctrineBundle/configuration.html#caching-drivers
 *
 * For complex caching scenarios, you are advised to use a custom configuration file as described at the top of this
 * file.
 */
$container->setParameter('cache.doctrine', 'array');

/**
 * Defines if a maintenance page should be displayed.
 */
$container->setParameter('partkeepr.maintenance', false);

/**
 * Defines if a maintenance page should be displayed. Set to false to prevent a maintenance page being
 * displayed, or to a string which should occur on the maintenance page.
 */
$container->setParameter('partkeepr.maintenance.title', '');

/**
 * Defines if a maintenance page should be displayed. Set to false to prevent a maintenance page being
 * displayed, or to a string which should occur on the maintenance page.
 */
$container->setParameter('partkeepr.maintenance.message', '');

/**
 * Defines a limit for the maximum amount of users allowed. Valid values are false (no limit) or an integer number
 */
$container->setParameter('partkeepr.users.limit', false);

/**
 * Defines a limit for the maximum amount of parts allowed. Valid values are false (no limit) or an integer number
 */
$container->setParameter('partkeepr.parts.limit', false);

